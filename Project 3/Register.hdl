// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/Register.hdl
/**
 * 16-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value:
 * if (load(t)) out(t+1) = int(t), else out(t+1) = out(t)
 */
CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    Bit(in= in[0], load= load, out= out[0]);
    Bit(in= in[01], load= load, out= out[01]);
    Bit(in= in[02], load= load, out= out[02]);
    Bit(in= in[03], load= load, out= out[03]);
    Bit(in= in[04], load= load, out= out[04]);
    Bit(in= in[05], load= load, out= out[05]);
    Bit(in= in[06], load= load, out= out[06]);
    Bit(in= in[07], load= load, out= out[07]);
    Bit(in= in[08], load= load, out= out[08]);
    Bit(in= in[09], load= load, out= out[09]);
    Bit(in= in[10], load= load, out= out[10]);
    Bit(in= in[011], load= load, out= out[011]);
    Bit(in= in[012], load= load, out= out[012]);
    Bit(in= in[013], load= load, out= out[013]);
    Bit(in= in[014], load= load, out= out[014]);
    Bit(in= in[015], load= load, out= out[015]);
}